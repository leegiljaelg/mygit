※ Amazon Elastic Compute Cloud(Amazon EC2)
AWS(Amazon Web Services)が提供する仮想サーバー(インスタンス)をクラウドで簡単に生成·管理できるサービスです。

EC2(Elastic Computer Cloud)
仮想化されたサーバーへのアクセスに使用するサービス

オンプレミスと比べると、柔軟でコスト効率が高く、高速
お客様が困っている部分はすでに解決、すぐに使用可能
使用した部分のみ支払い -> コスト削減

従量課金制:使用した資源に対して使用量分の費用を支払う課金モデル、必要な分だけ支出

※ 仮想マシン(VM)
1つの物理的なコンピュータで複数の独立した仮想環境を生成する技術、ホストシステム(物理的なコンピュータ)の上で動作
全体ホストを使用しなくても可能、複数のインスタンスと共有して使用

※ ハイパーバイザー(Hypervisor)
仮想化ソフトウェア、1 つの物理的なコンピュータ（ホスト システム）で複数の仮想マシン（仮想環境）を実行および管理する役割

※ マルチテナンシー(Multitenancy)
複数の仮想マシンが基本的なハードウェアを共有すること

※ オンデマンド提供:ユーザーが必要とするサービスをすぐに利用できるように提供するモデル、技術とインターネットの進歩で特に強調される。
オンデマンドサービスの特徴
リアルタイム利用可能、インターネット基盤、使用量による費用体系
様々な産業分野で活用、パーソナライズされた経験、クラウドインフラの活用

※ インスタンス
他社のクラウドサービスが提供するサーバー リソース

※ Amazon EC2 インスタンスタイプ

汎用インスタンス
コンピューティング、メモリ、ネットワーキング リソースをバランスよく提供
いずれかのリソース領域の最適化X
EX) アプリケーションサーバー、ゲームサーバー、エンタープライズアプリケーション用のバックアンドサーバー

コンピューティング最適化インスタンス
高性能プロセッサを活用するコンピューティング集約的なアプリケーションに適合
単一グループで多くのトランザクションを処理する必要がある一括処理ワークロードに使用

メモリ最適化インスタンス
メモリから大規模なデータセットを処理するワークロードに高速な性能を提供するために設計、メモリ集約的なワークロードに適合
高性能データベース、ビッグデータリアルタイム処理

アクセラレーテッド·コンピューティング·インスタンス
ハードウェアアクセラレータまたはコプロセッサを使用して、一部の機能をCPUで実行されるソフトウェアでより効率的に実行
EX)浮動小数点数計算、グラフィック処理、データパターン一致

ハードウェアアクセラレータ
データ処理を加速できるコンポーネント

ストレージ最適化インスタンス
ローカルストレージの大規模データセットへの順次読み書きアクセスが多く必要なワークロードのために設計
EX) 分散ファイルシステム、データウェアハウジングアプリケーション、高頻度オンライントランザクション処理（OLTP）システム

※ Amazon EC2料金
オンデマンド·インスタンス
中断できない不規則な短期ワークロードがあるアプリケーションに最適、使用したコンピューティング時間に対してのみ費用を支払い、1年以上続くワークロードにはお勧めしません

予約インスタンス
アカウントからオンデマンド インスタンスを使用する場合に適用される支払い割引オプション

標準予約インスタンス
安定した状態のアプリケーションに必要なEC2インスタンスのタイプとサイズ、そしてそのアプリケーションを実行するAWSリージョンを知っている場合に適しています

コンバーチブル予約インスタンス
EC2 インスタンスを複数の可用領域または複数のインスタンスタイプで実行する必要がある場合、コンバーチブル予約インスタンスが適合

EC2 Instance Savings Plans
一定の使用量を約定する対価としてEC2を安価に提供
特定のインスタンスファミリーおよびリージョンに対して1年または3年の期間、時間当たりの支出約定をする場合、EC2インスタンスの費用を割引

スポット·インスタンス
開始·終了時間が自由または中断に耐えられるワークロードに適合
未使用のAmazon EC2コンピューティング容量を使用し、オンデマンド料金の最大90%までコストを削減

専用ホスト
ユーザー専用のAmazon EC2 インスタンス容量を備えた物理的サーバー

※ Amazon EC2 Auto Scaling
クラウドインフラストラクチャでアプリケーションの可用性とパフォーマンスを維持しながらコスト効率を最大化するための自動化された拡張機能
変化するアプリケーションの需要に応じて、Amazon EC2 インスタンスを自動的に追加または削除できます。 また、必要に応じてインスタンスを自動的に調整して、アプリケーションの可用性を効果的に維持します

接近方式
動的調整:需要変化に備える
予測調整:予測された需要に応じて適切な数のAmazon EC2 インスタンスを自動的に予約

増加する需要への対応
垂直拡張:実行するデバイスのパフォーマンス向上
水平拡張:インスタンスの増加（最小容量、希望容量）

※ Elastic Load Balancing
入ってくるアプリケーショントラフィックをAmazon EC2 インスタンスなどの複数のリソースに自動的に分散するAWS サービスです。

ロード·バランサー
要請を受けた後、処理するインスタンスにルーティングするアプリケーション、Auto Scalingグループに入ってくるすべてのウェブトラフィックの単一接点の役割
つまり、入ってくるトラフィックの量に合わせてAmazon EC2 インスタンスを追加または削除するので、このような要求を先にルーティングします

ルーティング
ネットワーク上でパスを選択するプロセス

※ Elastic Load BalancingとAmazon EC2 Auto Scalingは別のサービスですが、互いに連動してAmazon EC2で実行されるアプリケーションが優れた性能と可用性を提供するようにサポートします。

※ モノリシックアプリケーション
単一の統合コードベースで構成されるソフトウェア アプリケーション
コンポーネントは互いに通信してデータを送信し、リクエストを移行し、アプリケーションを継続実行
密結合されたアプリケーション
1 つのコンポーネントに障害が発生すると、他のコンポーネントにも障害が発生し、アプリケーション全体でも可能になります

※ マイクロサービスアプローチ
アプリケーションを小規模で独立したサービス単位に分けて管理するソフトウェア アーキテクチャ スタイル
小結合性
単一のコンポーネントに障害が発生した場合、アプリケーションの可用性を維持する

※ Amazon Simple Notification Service(Amazon SNS)
掲示·購読サービス
投稿者はAmazon SNSテーマを使用して購読者にメッセージを投稿

※ Amazon Simple Queue Service(Amazon SQS)
メッセージキューサービス
メッセージの損失やその他のサービスを使用することなく、ソフトウェア コンポーネント間でメッセージを送信、保存、受信できます。

※ プロビジョニング
ITインフラを生成·設定するプロセスとして、様々なリソースへのユーザーおよびシステムアクセスを管理するために必要なステップです。 サーバー、アプリケーション、ネットワーク構成、ストレージ、エッジ機器などを配布する過程で初期段階に該当します

※ サーバーレス·コンピューティング
アプリケーションをホストする基本インフラやインスタンスを、まるでサーバーがないかのように管理する必要がないという意味です。 必要なプロビジョニング、規模調整、高可用性、および維持管理に関するすべての基本的な環境管理をAWSが代わりに処理します。 サーバーをメンテナンスする代わりに、新しい製品と機能を革新することにもっと集中できます。

代表的なサーバーレスコンピューティングオプションサービス:AWS Lambda

※ AWS Lambda
サーバーをプロビジョニングしたり管理したりする必要なくコードを実行できるサービス
使用したコンピューティング時間に対してのみ費用、コードを実行している間のみの料金を支払う

作動方式
Lambdaにコードをアップロード -> イベントソースからトリガーされるようにコード設定 ->トリガーされた時のみ作動 ->使用したコンピューティング時間を支払う

※ コンテナ
アプリケーションのコードと依存性を 1 つのオブジェクトにパッケージングする標準方式を提供
プロセスおよびワークフローに使用 -> セキュリティ、信頼性、拡張性の要求事項

※ Amazon Elastic Container Service(Amazon ECS)
AWSでコンテナ式アプリケーションを実行して拡張できる拡張性に優れた高性能コンテナ管理システム
Dockerコンテナをサポート

※ Docker(opens in a new tab)
アプリケーションを迅速に構築、テスト、配布できるソフトウェアプラットフォーム

※ Amazon Elastic Kubernetes Service(Amazon EKS)
AWSでKubernetesを実行するのに使用できる完全管理型サービス

Kubernetes(opens in a new tab)
コンテナ式アプリケーションの大規模な配布と管理に使用できるオープンソースソフトウェア

※ AWS Fargate
コンテナ用サーバーレスコンピューティングエンジン
Amazon ECSとAmazon EKSで動作
サーバー管理は必要ありません。
