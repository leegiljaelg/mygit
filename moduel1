※ クライアント:複数のコンピュータが通信するときにホストに従属して通信するコンピュータ

※ サーバー:クライアントにネットワークを介して情報やサービスを提供するコンピュータシステム

※ クライアント-サーバモデル:サービス要求者であるクライアントとサービスリソースの提供者であるサーバ間で作業を分離する分散アプリケーション構造であり、ネットワークアーキテクチャ

※ コンピューティング:アプリケーションを実行するためのコンピューティング リソース

※ ストレージ - データを保存するためのサービス

※ クラウドコンピューティング:インターネットを通じてサーバー、ストレージ、データベース、ネットワーク、ソフトウェア、分析などを含むコンピューティングリソースを提供するサービスモデルです。

※ クラウド:広大なネットワークを通じてアクセスできる仮想化されたサーバーとサーバーで動作するプログラムとデータベースを提供するIT環境

クラウドコンピューティングのメリット

コスト削減 - 使用したリソース部分のみ、コストの支払い、運用コストの削減、可変コストの削減 - 生産量の増減によって変わるコスト
拡張性 - サイズ予測不要、すぐに使用可能
速度 - アプリケーションをすばやく設定、展開
高度なセキュリティ機能
リアルタイム協業可能 - 複数の使用自慢が同時に作業可能
管理効率性 - 自動化

※ クラウド·アプリケーション
インターネット経由でクラウド コンピューティング インフラストラクチャを使用して提供されるソフトウェア アプリケーションです。

構成要素
フロントエンド(Frontend)、バックエンド(Backend)、データベース(Database)、クラウドインフラストラクチャ(Cloud Infrastructure)、セキュリティ(Security)、オペレーションおよびモニタリング(Operation and Monitoring)、開発ツール(Development Tools)

※ レガシーITインフラ
既存のシステムを維持およびサポートするためのハードウェア、ソフトウェア、ネットワーキング、セキュリティ、データ管理および運用手順

要求事項
安定性と可用性、メンテナンスとサポート、セキュリティ、パフォーマンス、データ統合と互換性、コスト管理、コンプライアンス、技術的負債管理、ユーザートレーニングと文書化

※ お気に入りのリソース管理ツール
ITインフラとプロジェクトのリソース（サーバー、ネットワーク、ストレージ、人材など）の効率的な管理と最適化に使用

ITインフラリソース管理ツール
VMware vSphere, Microsoft System Center, Red Hat Ansible, Nagios

プロジェクトおよび人材リゴス管理ツール
Microsoft Project, Jira, Trello, Asana

クラウド管理ツール
AWS Management Console, Azure Resource manager, Google Cloud Console, Kubernetes

※ クラウドベースの配布(cloud-based deployment)
クラウドインフラを活用してアプリケーションとサービスを配布、管理、運営することを意味し、柔軟性と拡張性を提供し、インフラ管理の複雑性を減らし、コスト効率を高めることができます。

長所
簡単に拡張·縮小が可能
コスト削減
配布速度の速さ

短所
インターネット接続の依存性
セキュリティ脆弱性

※ オンプレミス配布(on-premises deployment、プライベートクラウド配布)
企業が自らのデータセンターや物理サーバーにソフトウェア、アプリケーション、データベースなどをインストール·運営する方式

長所
保安性
敏感なアプリケーションの場合、より良いパフォーマンスを提供
要求事項の最適化が可能

短所
高い初期費用
メンテナンスとアップグレード
拡張性の難しさ

※ ハイブリッド配布(Hybrid Deployment)
オンプレミスインフラとパブリッククラウドを組み合わせて使用するITインフラモデルです。 各環境の長所を最大限活用しながら短所を最小化できる方法
